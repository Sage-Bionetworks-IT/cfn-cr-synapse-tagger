AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  A Cloudformation custom resource to apply Sage Bionetworks Synapse data to cloud resources

Metadata:
  AWS::ServerlessRepo::Application:
    Name: "cfn-cr-synapse-tagger"
    Description: >-
      A Cloudformation custom resource to apply Sage Bionetworks Synapse data to cloud resources
    Author: "Sage-Bionetworks"
    SpdxLicenseId: "Apache-2.0"
    # paths are relative to .aws-sam/build directory
    LicenseUrl: "LICENSE"
    ReadmeUrl: "README.md"
    Labels: ["serverless", "custom-resource", "cloudformation", "synapse", "tags"]
    HomePageUrl: "https://github.com/Sage-Bionetworks-IT/cfn-cr-synapse-tagger"
    SemanticVersion: "0.0.11"
    SourceCodeUrl: "https://github.com/Sage-Bionetworks-IT/cfn-cr-synapse-tagger/tree/0.0.11"

Parameters:
  TeamToRoleArnMapParamName:
    Description: 'The TeamToRoleArnMap parameter name in the SSM parameter store'
    Type: String
    Default: '/service-catalog/TeamToRoleArnMap'

Globals:
  Function:
    Timeout: 180
    Runtime: python3.7
    Handler: app.handler

Resources:
  SetBatchTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: set_tags/set_batch_tags.handler
      Role: !GetAtt SetBatchTagsFunctionRole.Arn
      Environment:
        Variables:
          TEAM_TO_ROLE_ARN_MAP_PARAM_NAME: !Ref TeamToRoleArnMapParamName

  SetBatchTagsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref BatchTagPolicy
        - !Ref SsmManagedPolicy
        - !Ref CloudformationAccessPolicy

  BatchTagPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: GetAndPutBatchTags
            Effect: 'Allow'
            Action:
              - 'batch:ListTagsForResource'
              - 'batch:TagResource'
              - 'batch:UntagResource'
            Resource: '*'

  SetBucketTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: set_tags/set_bucket_tags.handler
      Role: !GetAtt SetBucketTagsFunctionRole.Arn
      Environment:
        Variables:
          TEAM_TO_ROLE_ARN_MAP_PARAM_NAME: !Ref TeamToRoleArnMapParamName

  SetBucketTagsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref BucketTagPolicy
        - !Ref SsmManagedPolicy

  BucketTagPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: GetAndPutBucketTags
            Effect: 'Allow'
            Action:
              - 's3:GetBucketTagging'
              - 's3:PutBucketTagging'
            Resource: '*'

  SetInstanceTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: set_tags/set_instance_tags.handler
      Role: !GetAtt SetInstanceTagsFunctionRole.Arn
      Environment:
        Variables:
          TEAM_TO_ROLE_ARN_MAP_PARAM_NAME: !Ref TeamToRoleArnMapParamName

  SetInstanceTagsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref InstanceTagPolicy
        - !Ref SsmManagedPolicy

  InstanceTagPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AccessInstanceTags
            Effect: 'Allow'
            Action:
              - 'EC2:Describe*'
              - 'EC2:CreateTags'
              - 'EC2:DeleteTags'
              - 'iam:ListRoles'
              - 'iam:GetRole'
            Resource: '*'

  SsmManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: GetParamAccess
            Action:
              - 'ssm:*'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${TeamToRoleArnMapParamName}'

  CloudformationAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: GetAndPutBatchTags
            Effect: 'Allow'
            Action:
              - 'cloudformation:Describe*'
              - 'cloudformation:Get*'
              - 'cloudformation:List*'
            Resource: '*'

Outputs:
  SetBatchTagsFunctionName:
    Value: !Ref SetBatchTagsFunction
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetBatchTagsFunctionName'
  SetBatchTagsFunctionArn:
    Value: !GetAtt SetBatchTagsFunction.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetBatchTagsFunctionArn'
  SetBucketTagsFunctionName:
    Value: !Ref SetBucketTagsFunction
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetBucketTagsFunctionName'
  SetBucketTagsFunctionArn:
    Value: !GetAtt SetBucketTagsFunction.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetBucketTagsFunctionArn'
  SetInstanceTagsFunctionName:
    Value: !Ref SetInstanceTagsFunction
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetInstanceTagsFunctionName'
  SetInstanceTagsFunctionArn:
    Value: !GetAtt SetInstanceTagsFunction.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetInstanceTagsFunctionArn'
